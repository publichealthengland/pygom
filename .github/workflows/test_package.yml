name: create PyGOM distributions

on:
  push:
    branches:
      - master
      - dev
      - feature/*
      - bugfix/*

  pull_request:
    branches:
      - master
      - dev

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  #, macos-13, macos-14] 
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v4
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v4
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check python version
        run: python -c "import sys; print(sys.version)"
        
      - name: Install pip 
        run: |
          python -m pip install --upgrade pip
          
      - name: install PyGOM
        run: |
          pip install .

      - name: Run tests
        run: python -m unittest discover --verbose --start-directory tests
      
      #TODO: Could also do something about coverage here too